/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/search/route";
exports.ids = ["app/api/search/route"];
exports.modules = {

/***/ "(rsc)/./app/api/search/route.ts":
/*!*********************************!*\
  !*** ./app/api/search/route.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET)\n/* harmony export */ });\n/* harmony import */ var _lib_fmp__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/fmp */ \"(rsc)/./lib/fmp.ts\");\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n\n\nasync function GET(request) {\n    const { searchParams } = new URL(request.url);\n    const query = searchParams.get('query');\n    if (!query) {\n        return next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.json({\n            error: 'Query parameter is required'\n        }, {\n            status: 400\n        });\n    }\n    try {\n        const results = await (0,_lib_fmp__WEBPACK_IMPORTED_MODULE_0__.searchSymbol)(query);\n        return next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.json(results);\n    } catch (error) {\n        console.error('Error searching symbols:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.json({\n            error: 'Failed to search symbols'\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvYXBpL3NlYXJjaC9yb3V0ZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBeUM7QUFDRTtBQUVwQyxlQUFlRSxJQUFJQyxPQUFnQjtJQUN4QyxNQUFNLEVBQUVDLFlBQVksRUFBRSxHQUFHLElBQUlDLElBQUlGLFFBQVFHLEdBQUc7SUFDNUMsTUFBTUMsUUFBUUgsYUFBYUksR0FBRyxDQUFDO0lBRS9CLElBQUksQ0FBQ0QsT0FBTztRQUNWLE9BQU9OLHFEQUFZQSxDQUFDUSxJQUFJLENBQUM7WUFBRUMsT0FBTztRQUE4QixHQUFHO1lBQUVDLFFBQVE7UUFBSTtJQUNuRjtJQUVBLElBQUk7UUFDRixNQUFNQyxVQUFVLE1BQU1aLHNEQUFZQSxDQUFDTztRQUNuQyxPQUFPTixxREFBWUEsQ0FBQ1EsSUFBSSxDQUFDRztJQUMzQixFQUFFLE9BQU9GLE9BQU87UUFDZEcsUUFBUUgsS0FBSyxDQUFDLDRCQUE0QkE7UUFDMUMsT0FBT1QscURBQVlBLENBQUNRLElBQUksQ0FBQztZQUFFQyxPQUFPO1FBQTJCLEdBQUc7WUFBRUMsUUFBUTtRQUFJO0lBQ2hGO0FBQ0YiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zdGVmZmVuZ290dGxlL0Rlc2t0b3AvbmV4dGxldmVsdHJhZGVycy9hcHAvYXBpL3NlYXJjaC9yb3V0ZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzZWFyY2hTeW1ib2wgfSBmcm9tICdAL2xpYi9mbXAnO1xuaW1wb3J0IHsgTmV4dFJlc3BvbnNlIH0gZnJvbSAnbmV4dC9zZXJ2ZXInO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gR0VUKHJlcXVlc3Q6IFJlcXVlc3QpIHtcbiAgY29uc3QgeyBzZWFyY2hQYXJhbXMgfSA9IG5ldyBVUkwocmVxdWVzdC51cmwpO1xuICBjb25zdCBxdWVyeSA9IHNlYXJjaFBhcmFtcy5nZXQoJ3F1ZXJ5Jyk7XG5cbiAgaWYgKCFxdWVyeSkge1xuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7IGVycm9yOiAnUXVlcnkgcGFyYW1ldGVyIGlzIHJlcXVpcmVkJyB9LCB7IHN0YXR1czogNDAwIH0pO1xuICB9XG5cbiAgdHJ5IHtcbiAgICBjb25zdCByZXN1bHRzID0gYXdhaXQgc2VhcmNoU3ltYm9sKHF1ZXJ5KTtcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24ocmVzdWx0cyk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3Igc2VhcmNoaW5nIHN5bWJvbHM6JywgZXJyb3IpO1xuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7IGVycm9yOiAnRmFpbGVkIHRvIHNlYXJjaCBzeW1ib2xzJyB9LCB7IHN0YXR1czogNTAwIH0pO1xuICB9XG59XG4iXSwibmFtZXMiOlsic2VhcmNoU3ltYm9sIiwiTmV4dFJlc3BvbnNlIiwiR0VUIiwicmVxdWVzdCIsInNlYXJjaFBhcmFtcyIsIlVSTCIsInVybCIsInF1ZXJ5IiwiZ2V0IiwianNvbiIsImVycm9yIiwic3RhdHVzIiwicmVzdWx0cyIsImNvbnNvbGUiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./app/api/search/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/fmp.ts":
/*!********************!*\
  !*** ./lib/fmp.ts ***!
  \********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getHistoricalPrices: () => (/* binding */ getHistoricalPrices),\n/* harmony export */   getMarketIndices: () => (/* binding */ getMarketIndices),\n/* harmony export */   getQuotes: () => (/* binding */ getQuotes),\n/* harmony export */   getTechnicalIndicator: () => (/* binding */ getTechnicalIndicator),\n/* harmony export */   searchSymbol: () => (/* binding */ searchSymbol)\n/* harmony export */ });\nconst FMP_API_KEY = \"7429b5ed13d44707b05ea011b9461a92\" || 0;\n// Verwende die API v3, die nachweislich funktioniert\nconst FMP_BASE_URL = 'https://financialmodelingprep.com/api/v3/';\n// Logging für Debugging\nconsole.log('FMP API Key:', FMP_API_KEY);\nconsole.log('FMP Base URL:', FMP_BASE_URL);\n// Hilfsfunktion zum Abrufen der API-Konfiguration\nfunction getFMPConfig() {\n    if (true) {\n        return {\n            dataDelay: 900,\n            lastUpdate: null\n        };\n    }\n    const delay = window.localStorage.getItem('fmp_data_delay');\n    const lastUpdate = window.localStorage.getItem('fmp_last_update');\n    return {\n        dataDelay: delay ? parseInt(delay, 10) : 900,\n        lastUpdate: lastUpdate ? parseInt(lastUpdate, 10) : null\n    };\n}\n// Hilfsfunktion zum Setzen des letzten Updates\nfunction setLastUpdate(timestamp) {\n    if (false) {}\n}\nasync function getQuotes(symbols) {\n    if (!symbols.length) return [];\n    try {\n        const { dataDelay, lastUpdate } = getFMPConfig();\n        const currentTime = Math.floor(Date.now() / 1000);\n        const timestamp = currentTime - dataDelay;\n        // Prüfe ob wir neue Daten abrufen müssen\n        if (lastUpdate && currentTime - lastUpdate < dataDelay) {\n            console.log('Using cached data, next update in:', dataDelay - (currentTime - lastUpdate), 'seconds');\n        // Instead of returning empty array, we should still fetch the data\n        // This is a temporary fix to ensure data is always returned\n        }\n        // Verwende die korrekten Endpunkte gemäß der FMP-Dokumentation\n        // Verwende die v3 API direkt, da diese am stabilsten ist\n        const urls = [\n            // Haupt-API-Endpunkt (v3)\n            `https://financialmodelingprep.com/api/v3/quote/${symbols.join(',')}?apikey=${FMP_API_KEY}`,\n            // Fallback auf den Batch-Quote-Endpunkt\n            `https://financialmodelingprep.com/api/v3/quote-short/${symbols.join(',')}?apikey=${FMP_API_KEY}`,\n            // Letzter Fallback auf die stable API\n            `${FMP_BASE_URL}/quote?symbol=${symbols.join(',')}&apikey=${FMP_API_KEY}`\n        ];\n        let response;\n        let error;\n        // Try each URL until one works\n        for (const url of urls){\n            try {\n                console.log('Fetching quotes from:', url);\n                response = await fetch(url, {\n                    headers: {\n                        'Cache-Control': 'no-cache',\n                        'Pragma': 'no-cache'\n                    }\n                });\n                if (response.ok) {\n                    console.log('Successfully fetched data from:', url);\n                    break; // Exit the loop if we get a successful response\n                } else {\n                    const errorText = await response.text();\n                    console.warn(`API error from ${url}:`, {\n                        status: response.status,\n                        statusText: response.statusText,\n                        body: errorText.substring(0, 100) // Limit log size\n                    });\n                }\n            } catch (e) {\n                console.warn(`Failed to fetch from ${url}:`, e);\n                error = e;\n            }\n        }\n        // If we didn't get a successful response from any URL\n        if (!response || !response.ok) {\n            console.error('All FMP API endpoints failed');\n            throw new Error(`Failed to fetch quotes: ${error || 'All endpoints failed'}`);\n        }\n        const data = await response.json();\n        if (!Array.isArray(data)) {\n            console.error('Unexpected data format:', data);\n            return [];\n        }\n        // Aktualisiere den Zeitstempel des letzten Updates\n        setLastUpdate(currentTime);\n        // Transformiere die Daten und stelle sicher, dass die Prozentangaben korrekt sind\n        return data.map((quote)=>{\n            // Stelle sicher, dass changesPercentage korrekt ist\n            // Manchmal liefert die API changesPercentage als String mit '%' am Ende\n            let changesPercentage = quote.changesPercentage;\n            if (typeof changesPercentage === 'string') {\n                changesPercentage = parseFloat(changesPercentage.replace('%', ''));\n            }\n            // Debug-Ausgabe für die Prozentangaben\n            console.log(`Symbol: ${quote.symbol}, Price: ${quote.price}, Change: ${quote.change}, ChangesPercentage: ${changesPercentage}`);\n            return {\n                symbol: quote.symbol,\n                name: quote.name,\n                price: Number(quote.price) || 0,\n                change: Number(quote.change) || 0,\n                changesPercentage: Number(changesPercentage) || 0,\n                dayHigh: Number(quote.dayHigh) || 0,\n                dayLow: Number(quote.dayLow) || 0,\n                volume: Number(quote.volume) || 0,\n                avgVolume: Number(quote.avgVolume) || 0,\n                delayed: dataDelay > 0,\n                timestamp: new Date(timestamp * 1000).toISOString(),\n                nextUpdate: new Date((currentTime + dataDelay) * 1000).toISOString()\n            };\n        });\n    } catch (error) {\n        console.error('Error fetching quotes:', error);\n        throw error;\n    }\n}\nasync function getHistoricalPrices(symbol, interval = 'daily', limit = 100) {\n    try {\n        let endpoint = '';\n        let params = new URLSearchParams({\n            apikey: FMP_API_KEY || ''\n        });\n        if (interval === 'daily') {\n            endpoint = `historical-price-full/${symbol}`;\n            // For daily data, we need more historical data for pivot calculations\n            params.append('limit', Math.max(limit, 30).toString());\n        } else {\n            endpoint = `historical-chart/${interval}/${symbol}`;\n            params.append('limit', limit.toString());\n        }\n        console.log('Interval:', interval, 'Endpoint:', endpoint);\n        // Use the stable API endpoint\n        const url = `${FMP_BASE_URL}${endpoint}?${params.toString()}`;\n        console.log('Fetching historical prices from:', url);\n        const response = await fetch(url, {\n            headers: {\n                'Cache-Control': 'no-cache',\n                'Pragma': 'no-cache'\n            }\n        });\n        if (!response.ok) {\n            throw new Error('Failed to fetch historical prices');\n        }\n        const data = await response.json();\n        const prices = interval === 'daily' ? data.historical : data;\n        if (!Array.isArray(prices)) {\n            console.error('Unexpected data format from FMP API:', data);\n            return [];\n        }\n        // Sort data by date (newest first)\n        return prices.map((price)=>({\n                date: price.date,\n                open: Number(price.open) || 0,\n                high: Number(price.high) || 0,\n                low: Number(price.low) || 0,\n                close: Number(price.close) || 0,\n                volume: Number(price.volume) || 0\n            })).sort((a, b)=>new Date(b.date).getTime() - new Date(a.date).getTime());\n    } catch (error) {\n        console.error('Error fetching historical prices:', error);\n        return [];\n    }\n}\nasync function getTechnicalIndicator(symbol, indicator, period = 20, interval = 'daily') {\n    try {\n        // Use the stable API endpoint for technical indicators\n        const url = `${FMP_BASE_URL}technical_indicator/${interval}/${symbol}?period=${period}&type=${indicator}&apikey=${FMP_API_KEY}`;\n        console.log('Fetching technical indicator from:', url);\n        const response = await fetch(url, {\n            headers: {\n                'Cache-Control': 'no-cache',\n                'Pragma': 'no-cache'\n            }\n        });\n        if (!response.ok) {\n            throw new Error(`Failed to fetch ${indicator.toUpperCase()}`);\n        }\n        const data = await response.json();\n        return Array.isArray(data) ? data : [];\n    } catch (error) {\n        console.error(`Error fetching ${indicator.toUpperCase()}:`, error);\n        return [];\n    }\n}\nasync function searchSymbol(query) {\n    try {\n        const url = `${FMP_BASE_URL}search?query=${encodeURIComponent(query)}&limit=10&apikey=${FMP_API_KEY}`;\n        console.log('Searching symbols from:', url);\n        const response = await fetch(url, {\n            headers: {\n                'Cache-Control': 'no-cache',\n                'Pragma': 'no-cache'\n            }\n        });\n        if (!response.ok) {\n            throw new Error('Failed to search symbols');\n        }\n        const data = await response.json();\n        return Array.isArray(data) ? data : [];\n    } catch (error) {\n        console.error('Error searching symbols:', error);\n        return [];\n    }\n}\nasync function getMarketIndices() {\n    try {\n        const url = `${FMP_BASE_URL}quote/%5EGSPC,%5EIXIC?apikey=${FMP_API_KEY}`;\n        console.log('Fetching market indices from:', url);\n        const response = await fetch(url, {\n            headers: {\n                'Cache-Control': 'no-cache',\n                'Pragma': 'no-cache'\n            }\n        });\n        if (!response.ok) {\n            throw new Error('Failed to fetch market indices');\n        }\n        const data = await response.json();\n        return Array.isArray(data) ? data : [];\n    } catch (error) {\n        console.error('Error fetching market indices:', error);\n        return [];\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/fmp.ts\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fsearch%2Froute&page=%2Fapi%2Fsearch%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsearch%2Froute.ts&appDir=%2FUsers%2Fsteffengottle%2FDesktop%2Fnextleveltraders%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fsteffengottle%2FDesktop%2Fnextleveltraders&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fsearch%2Froute&page=%2Fapi%2Fsearch%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsearch%2Froute.ts&appDir=%2FUsers%2Fsteffengottle%2FDesktop%2Fnextleveltraders%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fsteffengottle%2FDesktop%2Fnextleveltraders&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_steffengottle_Desktop_nextleveltraders_app_api_search_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/search/route.ts */ \"(rsc)/./app/api/search/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/search/route\",\n        pathname: \"/api/search\",\n        filename: \"route\",\n        bundlePath: \"app/api/search/route\"\n    },\n    resolvedPagePath: \"/Users/steffengottle/Desktop/nextleveltraders/app/api/search/route.ts\",\n    nextConfigOutput,\n    userland: _Users_steffengottle_Desktop_nextleveltraders_app_api_search_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIvaW5kZXguanM/bmFtZT1hcHAlMkZhcGklMkZzZWFyY2glMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRnNlYXJjaCUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRnNlYXJjaCUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRnN0ZWZmZW5nb3R0bGUlMkZEZXNrdG9wJTJGbmV4dGxldmVsdHJhZGVycyUyRmFwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9JTJGVXNlcnMlMkZzdGVmZmVuZ290dGxlJTJGRGVza3RvcCUyRm5leHRsZXZlbHRyYWRlcnMmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQStGO0FBQ3ZDO0FBQ3FCO0FBQ3FCO0FBQ2xHO0FBQ0E7QUFDQTtBQUNBLHdCQUF3Qix5R0FBbUI7QUFDM0M7QUFDQSxjQUFjLGtFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsc0RBQXNEO0FBQzlEO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQzBGOztBQUUxRiIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIvVXNlcnMvc3RlZmZlbmdvdHRsZS9EZXNrdG9wL25leHRsZXZlbHRyYWRlcnMvYXBwL2FwaS9zZWFyY2gvcm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL3NlYXJjaC9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL3NlYXJjaFwiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvc2VhcmNoL3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiL1VzZXJzL3N0ZWZmZW5nb3R0bGUvRGVza3RvcC9uZXh0bGV2ZWx0cmFkZXJzL2FwcC9hcGkvc2VhcmNoL3JvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgd29ya0FzeW5jU3RvcmFnZSwgd29ya1VuaXRBc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgd29ya0FzeW5jU3RvcmFnZSxcbiAgICAgICAgd29ya1VuaXRBc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCB3b3JrQXN5bmNTdG9yYWdlLCB3b3JrVW5pdEFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fsearch%2Froute&page=%2Fapi%2Fsearch%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsearch%2Froute.ts&appDir=%2FUsers%2Fsteffengottle%2FDesktop%2Fnextleveltraders%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fsteffengottle%2FDesktop%2Fnextleveltraders&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fsearch%2Froute&page=%2Fapi%2Fsearch%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsearch%2Froute.ts&appDir=%2FUsers%2Fsteffengottle%2FDesktop%2Fnextleveltraders%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fsteffengottle%2FDesktop%2Fnextleveltraders&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();