"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/(dashboard)/dashboard/knowledge/page",{

/***/ "(app-pages-browser)/./app/(dashboard)/dashboard/knowledge/data/artikel-1.tsx":
/*!****************************************************************!*\
  !*** ./app/(dashboard)/dashboard/knowledge/data/artikel-1.tsx ***!
  \****************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   tradingBasicsData: () => (/* binding */ tradingBasicsData)\n/* harmony export */ });\nconst tradingBasicsData = {\n    heading: \"Trading Grundlagen\",\n    items: [\n        {\n            id: \"technische-analyse\",\n            title: \"Technische Analyse verstehen\",\n            summary: \"Einführung in die wichtigsten Konzepte der technischen Analyse\",\n            url: \"/dashboard/knowledge/technische-analyse\",\n            image: \"/logo.png\"\n        },\n        {\n            id: \"chartmuster\",\n            title: \"Chartmuster erkennen\",\n            summary: \"Die häufigsten Chartmuster und ihre Bedeutung im Trading\",\n            url: \"/dashboard/knowledge/chartmuster\",\n            image: \"/logo.png\"\n        },\n        {\n            id: \"indikatoren\",\n            title: \"Indikatoren richtig nutzen\",\n            summary: \"Effektiver Einsatz technischer Indikatoren für bessere Trading-Entscheidungen\",\n            url: \"/dashboard/knowledge/indikatoren\",\n            image: \"/logo.png\"\n        },\n        {\n            id: \"risikomanagement\",\n            title: \"Risikomanagement\",\n            summary: \"Strategien zur Kontrolle und Minimierung von Handelsrisiken\",\n            url: \"/dashboard/knowledge/risikomanagement\",\n            image: \"/logo.png\"\n        },\n        {\n            id: \"psychologie\",\n            title: \"Trading-Psychologie\",\n            summary: \"Mentale Stärke und emotionale Kontrolle im Trading\",\n            url: \"/dashboard/knowledge/psychologie\",\n            image: \"/logo.png\"\n        },\n        {\n            id: \"akronyme\",\n            title: \"✨ Wichtige Akronyme ✨\",\n            summary: \"b/t: Backtest • b/e: Breakeven • b/o: Breakout • r/g: Red to green • g/r: Green to red • moc: Market on close • SL: Stoploss • ATH: All time high • HOD: High of day • nHOD: New high of day • LOD: Low of day • nLOD: New low of day • PM: Premarket • PH: Power hour • AH: After hour • PA: Price Action • PT: Price Target • HH: Higher High • HL: Higher Low • LH: Lower High • LL: Lower Low • DD: Due diligence • R/R: Risk/Reward\",\n            url: \"/dashboard/knowledge/akronyme\",\n            image: \"/logo.png\"\n        }\n    ]\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC8oZGFzaGJvYXJkKS9kYXNoYm9hcmQva25vd2xlZGdlL2RhdGEvYXJ0aWtlbC0xLnRzeCIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sTUFBTUEsb0JBQW9CO0lBQy9CQyxTQUFTO0lBQ1RDLE9BQU87UUFDTDtZQUNFQyxJQUFJO1lBQ0pDLE9BQU87WUFDUEMsU0FBUztZQUNUQyxLQUFLO1lBQ0xDLE9BQU87UUFDVDtRQUNBO1lBQ0VKLElBQUk7WUFDSkMsT0FBTztZQUNQQyxTQUFTO1lBQ1RDLEtBQUs7WUFDTEMsT0FBTztRQUNUO1FBQ0E7WUFDRUosSUFBSTtZQUNKQyxPQUFPO1lBQ1BDLFNBQVM7WUFDVEMsS0FBSztZQUNMQyxPQUFPO1FBQ1Q7UUFDQTtZQUNFSixJQUFJO1lBQ0pDLE9BQU87WUFDUEMsU0FBUztZQUNUQyxLQUFLO1lBQ0xDLE9BQU87UUFDVDtRQUNBO1lBQ0VKLElBQUk7WUFDSkMsT0FBTztZQUNQQyxTQUFTO1lBQ1RDLEtBQUs7WUFDTEMsT0FBTztRQUNUO1FBQ0E7WUFDRUosSUFBSTtZQUNKQyxPQUFPO1lBQ1BDLFNBQVU7WUFDVkMsS0FBSztZQUNMQyxPQUFPO1FBQ1Q7S0FDRDtBQUNILEVBQUUiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zdGVmZmVuZ290dGxlL0Rlc2t0b3AvbmV4dGxldmVsdHJhZGVycy9hcHAvKGRhc2hib2FyZCkvZGFzaGJvYXJkL2tub3dsZWRnZS9kYXRhL2FydGlrZWwtMS50c3giXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IHRyYWRpbmdCYXNpY3NEYXRhID0ge1xuICBoZWFkaW5nOiBcIlRyYWRpbmcgR3J1bmRsYWdlblwiLFxuICBpdGVtczogW1xuICAgIHtcbiAgICAgIGlkOiBcInRlY2huaXNjaGUtYW5hbHlzZVwiLFxuICAgICAgdGl0bGU6IFwiVGVjaG5pc2NoZSBBbmFseXNlIHZlcnN0ZWhlblwiLFxuICAgICAgc3VtbWFyeTogXCJFaW5mw7xocnVuZyBpbiBkaWUgd2ljaHRpZ3N0ZW4gS29uemVwdGUgZGVyIHRlY2huaXNjaGVuIEFuYWx5c2VcIixcbiAgICAgIHVybDogXCIvZGFzaGJvYXJkL2tub3dsZWRnZS90ZWNobmlzY2hlLWFuYWx5c2VcIixcbiAgICAgIGltYWdlOiBcIi9sb2dvLnBuZ1wiLFxuICAgIH0sXG4gICAge1xuICAgICAgaWQ6IFwiY2hhcnRtdXN0ZXJcIixcbiAgICAgIHRpdGxlOiBcIkNoYXJ0bXVzdGVyIGVya2VubmVuXCIsXG4gICAgICBzdW1tYXJ5OiBcIkRpZSBow6R1Zmlnc3RlbiBDaGFydG11c3RlciB1bmQgaWhyZSBCZWRldXR1bmcgaW0gVHJhZGluZ1wiLFxuICAgICAgdXJsOiBcIi9kYXNoYm9hcmQva25vd2xlZGdlL2NoYXJ0bXVzdGVyXCIsXG4gICAgICBpbWFnZTogXCIvbG9nby5wbmdcIixcbiAgICB9LFxuICAgIHtcbiAgICAgIGlkOiBcImluZGlrYXRvcmVuXCIsXG4gICAgICB0aXRsZTogXCJJbmRpa2F0b3JlbiByaWNodGlnIG51dHplblwiLFxuICAgICAgc3VtbWFyeTogXCJFZmZla3RpdmVyIEVpbnNhdHogdGVjaG5pc2NoZXIgSW5kaWthdG9yZW4gZsO8ciBiZXNzZXJlIFRyYWRpbmctRW50c2NoZWlkdW5nZW5cIixcbiAgICAgIHVybDogXCIvZGFzaGJvYXJkL2tub3dsZWRnZS9pbmRpa2F0b3JlblwiLFxuICAgICAgaW1hZ2U6IFwiL2xvZ28ucG5nXCIsXG4gICAgfSxcbiAgICB7XG4gICAgICBpZDogXCJyaXNpa29tYW5hZ2VtZW50XCIsXG4gICAgICB0aXRsZTogXCJSaXNpa29tYW5hZ2VtZW50XCIsXG4gICAgICBzdW1tYXJ5OiBcIlN0cmF0ZWdpZW4genVyIEtvbnRyb2xsZSB1bmQgTWluaW1pZXJ1bmcgdm9uIEhhbmRlbHNyaXNpa2VuXCIsXG4gICAgICB1cmw6IFwiL2Rhc2hib2FyZC9rbm93bGVkZ2UvcmlzaWtvbWFuYWdlbWVudFwiLFxuICAgICAgaW1hZ2U6IFwiL2xvZ28ucG5nXCIsXG4gICAgfSxcbiAgICB7XG4gICAgICBpZDogXCJwc3ljaG9sb2dpZVwiLFxuICAgICAgdGl0bGU6IFwiVHJhZGluZy1Qc3ljaG9sb2dpZVwiLFxuICAgICAgc3VtbWFyeTogXCJNZW50YWxlIFN0w6Rya2UgdW5kIGVtb3Rpb25hbGUgS29udHJvbGxlIGltIFRyYWRpbmdcIixcbiAgICAgIHVybDogXCIvZGFzaGJvYXJkL2tub3dsZWRnZS9wc3ljaG9sb2dpZVwiLFxuICAgICAgaW1hZ2U6IFwiL2xvZ28ucG5nXCIsXG4gICAgfSxcbiAgICB7XG4gICAgICBpZDogXCJha3JvbnltZVwiLFxuICAgICAgdGl0bGU6IFwi4pyoIFdpY2h0aWdlIEFrcm9ueW1lIOKcqFwiLFxuICAgICAgc3VtbWFyeTogYGIvdDogQmFja3Rlc3Qg4oCiIGIvZTogQnJlYWtldmVuIOKAoiBiL286IEJyZWFrb3V0IOKAoiByL2c6IFJlZCB0byBncmVlbiDigKIgZy9yOiBHcmVlbiB0byByZWQg4oCiIG1vYzogTWFya2V0IG9uIGNsb3NlIOKAoiBTTDogU3RvcGxvc3Mg4oCiIEFUSDogQWxsIHRpbWUgaGlnaCDigKIgSE9EOiBIaWdoIG9mIGRheSDigKIgbkhPRDogTmV3IGhpZ2ggb2YgZGF5IOKAoiBMT0Q6IExvdyBvZiBkYXkg4oCiIG5MT0Q6IE5ldyBsb3cgb2YgZGF5IOKAoiBQTTogUHJlbWFya2V0IOKAoiBQSDogUG93ZXIgaG91ciDigKIgQUg6IEFmdGVyIGhvdXIg4oCiIFBBOiBQcmljZSBBY3Rpb24g4oCiIFBUOiBQcmljZSBUYXJnZXQg4oCiIEhIOiBIaWdoZXIgSGlnaCDigKIgSEw6IEhpZ2hlciBMb3cg4oCiIExIOiBMb3dlciBIaWdoIOKAoiBMTDogTG93ZXIgTG93IOKAoiBERDogRHVlIGRpbGlnZW5jZSDigKIgUi9SOiBSaXNrL1Jld2FyZGAsXG4gICAgICB1cmw6IFwiL2Rhc2hib2FyZC9rbm93bGVkZ2UvYWtyb255bWVcIixcbiAgICAgIGltYWdlOiBcIi9sb2dvLnBuZ1wiLFxuICAgIH1cbiAgXSxcbn07Il0sIm5hbWVzIjpbInRyYWRpbmdCYXNpY3NEYXRhIiwiaGVhZGluZyIsIml0ZW1zIiwiaWQiLCJ0aXRsZSIsInN1bW1hcnkiLCJ1cmwiLCJpbWFnZSJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/(dashboard)/dashboard/knowledge/data/artikel-1.tsx\n"));

/***/ })

});