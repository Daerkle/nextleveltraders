// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Watchlist {
  id          String    @id @default(uuid())
  name        String
  userId      String
  items       WatchlistItem[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@index([userId])
}

model WatchlistItem {
  id          String    @id @default(uuid())
  symbol      String
  watchlistId String
  watchlist   Watchlist @relation(fields: [watchlistId], references: [id], onDelete: Cascade)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@unique([watchlistId, symbol])
  @@index([watchlistId])
}

model Settings {
  id          String    @id @default(uuid())
  userId      String    @unique
  theme       String    @default("system")
  defaultSymbol String  @default("AAPL")
  showPivots  Boolean   @default(true)
  showNews    Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model ChatHistory {
  id          String    @id @default(uuid())
  userId      String
  message     String    @db.Text
  response    String    @db.Text
  createdAt   DateTime  @default(now())

  @@index([userId])
}

model TradingSetup {
  id          String    @id @default(uuid())
  userId      String
  symbol      String
  timeframe   String
  type        String // "LONG" oder "SHORT"
  entry       Float
  stopLoss    Float
  takeProfit  Float
  status      String    @default("ACTIVE") // "ACTIVE", "COMPLETED", "CANCELLED"
  notes       String?   @db.Text
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  result      Float?    // P/L in Prozent wenn abgeschlossen

  @@index([userId])
  @@index([symbol])
}